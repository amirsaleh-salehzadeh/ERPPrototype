input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json_lines
  }
  
  udp {
    port => 5000
    codec => json_lines
  }
}

filter {
  # Add timestamp if not present
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }

  # Parse JSON if message contains JSON
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }

  # Extract correlation ID for tracking
  if [fields][CorrelationId] {
    mutate {
      add_field => { "correlation_id" => "%{[fields][CorrelationId]}" }
    }
  }

  # Add service metadata
  mutate {
    add_field => { 
      "service_name" => "bff-gateway"
      "service_version" => "1.0.0"
      "environment" => "development"
    }
  }

  # Parse request details if present
  if [RequestDetails] {
    json {
      source => "RequestDetails"
      target => "request"
    }
  }

  # Parse response details if present
  if [ResponseDetails] {
    json {
      source => "ResponseDetails"
      target => "response"
    }
  }

  # Add performance metrics
  if [response][ElapsedMs] {
    mutate {
      convert => { "[response][ElapsedMs]" => "integer" }
      add_field => { "performance_category" => "normal" }
    }
    
    if [response][ElapsedMs] > 1000 {
      mutate {
        update => { "performance_category" => "slow" }
      }
    }
    
    if [response][ElapsedMs] > 5000 {
      mutate {
        update => { "performance_category" => "very_slow" }
      }
    }
  }

  # Categorize log levels
  if [Level] == "Error" or [Level] == "Fatal" {
    mutate {
      add_field => { "log_category" => "error" }
    }
  } else if [Level] == "Warning" {
    mutate {
      add_field => { "log_category" => "warning" }
    }
  } else {
    mutate {
      add_field => { "log_category" => "info" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "bff-gateway-logs-%{+YYYY.MM.dd}"
    template_name => "bff-gateway-template"
    template_pattern => "bff-gateway-logs-*"
    template => "{
      \"index_patterns\": [\"bff-gateway-logs-*\"],
      \"settings\": {
        \"number_of_shards\": 1,
        \"number_of_replicas\": 0
      },
      \"mappings\": {
        \"properties\": {
          \"@timestamp\": { \"type\": \"date\" },
          \"correlation_id\": { \"type\": \"keyword\" },
          \"service_name\": { \"type\": \"keyword\" },
          \"service_version\": { \"type\": \"keyword\" },
          \"environment\": { \"type\": \"keyword\" },
          \"log_category\": { \"type\": \"keyword\" },
          \"performance_category\": { \"type\": \"keyword\" },
          \"request.Method\": { \"type\": \"keyword\" },
          \"request.Path\": { \"type\": \"keyword\" },
          \"request.RemoteIpAddress\": { \"type\": \"ip\" },
          \"response.StatusCode\": { \"type\": \"integer\" },
          \"response.ElapsedMs\": { \"type\": \"integer\" }
        }
      }
    }"
  }
  
  stdout { 
    codec => rubydebug 
  }
}
